#!/usr/bin/env node

/*
 * Copyright 2015 Telefonica Investigaci√≥n y Desarrollo, S.A.U
 *
 * This file is part of perseo-fe
 *
 * perseo-fe is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * perseo-fe is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with perseo-fe.
 * If not, see http://www.gnu.org/licenses/.
 *
 * For those usages not covered by the GNU Affero General Public License
 * please contact with::[contacto@tid.es]
 */

'use strict';

var app = require('../lib/perseo'),
    logger = require('logops'),
    config = require('../config'),
    context = {op: 'perseo'};


process.on('uncaughtException', function(ex){
    logger.fatal(context, 'uncaughtException: %s', ex.message || ex , ex.stack && ex.stack.split('\n').join(','));
    logger.stream.write('',function(){
        process.exit(-1);
    });
});

function loadConfiguration() {
    var environmentValues = [
        'ENDPOINT_HOST',
        'ENDPOINT_PORT',
        'MONGO_HOST',
        'CORE_URL',
        'NEXT_URL',
        'ORION_URL',
        'LOG_LEVEL'
    ];

    for (var i = 0; i < environmentValues.length; i++) {
        if (process.env[environmentValues[i]]) {
            console.log('Changing %s to environment value: %s', environmentValues[i], process.env[environmentValues[i]]);
        }
    }

    if (process.env.ENDPOINT_HOST) {
        config.endpoint.host = process.env.ENDPOINT_HOST;
    }
    if (process.env.ENDPOINT_PORT) {
        config.endpoint.port = process.env.ENDPOINT_PORT;
    }
    if (process.env.MONGO_HOST) {
        config.mongo.url = 'mongodb://' + process.env.MONGO_HOST + ':27017/cep';
    }
    if (process.env.CORE_URL) {
        config.perseoCore.rulesURL = process.env.CORE_URL + '/perseo-core/rules';
        config.perseoCore.noticesURL = process.env.CORE_URL + '/perseo-core/events';
    }
    if (process.env.NEXT_URL) {
        config.nextCore.rulesURL = process.env.CORE_URL + '/perseo-core/rules';
        config.nextCore.noticesURL = process.env.CORE_URL + '/perseo-core/events';
    }
    if (process.env.ORION_URL) {
        config.orion.URL = process.env.ORION_URL;
    }
    if (process.env.LOG_LEVEL) {
        config.logLevel = process.env.LOG_LEVEL;
    }
}

loadConfiguration();

app.start(function (err) {
        logger.info(context, 'starting perseo');
        if (err) {
            logger.fatal(context, err.message);
            process.exit(-1);
        }
        logger.info(context, 'perseo started');
});
